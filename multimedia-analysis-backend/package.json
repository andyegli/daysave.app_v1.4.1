{
    "name": "multimedia-analysis-backend",
    "version": "1.0.0",
    "description": "Express.js backend for comprehensive multimedia content analysis including object detection, transcription, and summarization using OpenAI and Google Cloud APIs",
    "main": "server.js",
    "keywords": [
        "multimedia",
        "analysis",
        "object-detection",
        "transcription",
        "summarization",
        "openai",
        "google-cloud",
        "vision-api",
        "whisper",
        "speech-to-text",
        "express",
        "nodejs"
    ],
    "author": "Your Name <your.email@example.com>",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/yourusername/multimedia-analysis-backend.git"
    },
    "scripts": {
        "start": "node server.js",
        "dev": "nodemon server.js",
        "test": "jest --coverage",
        "test:watch": "jest --watch",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix",
        "prestart": "node -e \"console.log('ðŸ”§ Starting Multimedia Analysis Server...')\"",
        "postinstall": "node -e \"console.log('âœ… Dependencies installed successfully!')\""
    },
    "_comments": {
        "dependencies": {
            "_description": "Production dependencies required for the application to run",
            "@google-cloud/speech": "Google Cloud Speech-to-Text API client for audio transcription with speaker diarization",
            "@google-cloud/vision": "Google Cloud Vision API client for object detection, OCR, and image analysis",
            "cheerio": "Server-side jQuery-like HTML parser for web scraping and metadata extraction",
            "compression": "Express middleware for response compression (gzip/deflate) to reduce bandwidth",
            "cors": "Express middleware for Cross-Origin Resource Sharing - enables API access from different domains",
            "dotenv": "Loads environment variables from .env file for secure configuration management",
            "express": "Fast, minimal web framework for Node.js - handles HTTP routing, middleware, and requests",
            "fluent-ffmpeg": "Node.js wrapper for FFmpeg - handles audio/video processing, conversion, and metadata extraction",
            "helmet": "Express security middleware that sets various HTTP headers to protect against vulnerabilities",
            "morgan": "HTTP request logger middleware for Express - logs API requests for debugging and monitoring",
            "multer": "Express middleware for handling multipart/form-data file uploads with validation",
            "node-fetch": "Fetch API implementation for Node.js - makes HTTP requests to external APIs",
            "openai": "Official OpenAI API client for GPT-4 text analysis and Whisper audio transcription",
            "ytdl-core": "YouTube video downloader library (deprecated but kept for fallback compatibility)"
        },
        "devDependencies": {
            "_description": "Development dependencies for testing, linting, and development workflow",
            "eslint": "JavaScript linter for code quality and style enforcement",
            "eslint-config-standard": "ESLint configuration following JavaScript Standard Style guidelines",
            "eslint-plugin-import": "ESLint plugin for validating ES6+ import/export syntax",
            "eslint-plugin-n": "ESLint plugin for Node.js specific linting rules and best practices",
            "eslint-plugin-promise": "ESLint plugin for enforcing best practices with JavaScript promises",
            "jest": "JavaScript testing framework for unit tests, integration tests, and code coverage",
            "nodemon": "Development utility that automatically restarts the server when files change",
            "supertest": "HTTP testing library for testing Express.js applications and API endpoints"
        }
    },
    "dependencies": {
        "@google-cloud/speech": "^6.0.0",
        "@google-cloud/vision": "^4.0.2",
        "cheerio": "^1.0.0-rc.12",
        "compression": "^1.7.4",
        "cors": "^2.8.5",
        "dotenv": "^16.3.1",
        "express": "^4.18.2",
        "fluent-ffmpeg": "^2.1.2",
        "helmet": "^7.1.0",
        "morgan": "^1.10.0",
        "multer": "^1.4.5-lts.1",
        "node-fetch": "^2.7.0",
        "openai": "^4.20.1",
        "ytdl-core": "^4.11.5"
    },
    "devDependencies": {
        "eslint": "^8.54.0",
        "eslint-config-standard": "^17.1.0",
        "eslint-plugin-import": "^2.29.0",
        "eslint-plugin-n": "^16.3.1",
        "eslint-plugin-promise": "^6.1.1",
        "jest": "^29.7.0",
        "nodemon": "^3.0.1",
        "supertest": "^6.3.3"
    },
    "engines": {
        "node": ">=16.0.0",
        "npm": ">=8.0.0"
    },
    "os": [
        "darwin",
        "linux",
        "win32"
    ],
    "files": [
        "server.js",
        "README.md",
        "LICENSE"
    ],
    "config": {
        "port": 3000
    },
    "nodemonConfig": {
        "watch": [
            "server.js",
            ".env"
        ],
        "ext": "js,json",
        "ignore": [
            "uploads/*",
            "node_modules/*",
            "*.test.js"
        ],
        "delay": 1000
    },
    "jest": {
        "testEnvironment": "node",
        "collectCoverageFrom": [
            "server.js"
        ],
        "coverageDirectory": "coverage",
        "coverageReporters": [
            "text",
            "lcov",
            "html"
        ]
    },
    "eslintConfig": {
        "extends": [
            "standard"
        ],
        "env": {
            "node": true,
            "es2022": true,
            "jest": true
        },
        "rules": {
            "no-console": "off",
            "space-before-function-paren": "off"
        }
    },
    "funding": {
        "type": "individual",
        "url": "https://github.com/sponsors/yourusername"
    },
    "bugs": {
        "url": "https://github.com/yourusername/multimedia-analysis-backend/issues"
    },
    "homepage": "https://github.com/yourusername/multimedia-analysis-backend#readme"
}
