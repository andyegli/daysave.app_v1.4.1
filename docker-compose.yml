version: '3.8'

networks:
  daysave-network:
    driver: bridge

services:
  app:
    container_name: daysave-app
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      # Override DB host for container networking
      - DB_HOST=db
      # Ensure proper multimedia temp directory
      - MULTIMEDIA_TEMP_DIR=/usr/src/app/multimedia-temp
      # Google Cloud credentials path (if using service account file)
      - GOOGLE_APPLICATION_CREDENTIALS=/usr/src/app/gcp-credentials/service-account.json
    ports:
      - "${APP_PORT:-3000}:3000"
      - "${ANALYZER_PORT:-3001}:3001"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Persistent data volumes
      - app_logs:/usr/src/app/logs
      - app_uploads:/usr/src/app/uploads
      - app_temp:/usr/src/app/temp
      - app_backup:/usr/src/app/db_backup
      - multimedia_temp:/usr/src/app/multimedia-temp
      # Google Cloud credentials (mount your existing service account file)
      - ./config/credentials/daysave-v1412-storage-a1e112ca7a82.json:/usr/src/app/gcp-credentials/service-account.json:ro
      # Optional: Mount test files for development
      - ./testfiles:/usr/src/app/testfiles:ro
    networks:
      - daysave-network
    restart: unless-stopped
    
  db:
    container_name: daysave-db
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
      # Optimize MySQL for development
      MYSQL_INNODB_BUFFER_POOL_SIZE: 128M
      MYSQL_INNODB_LOG_FILE_SIZE: 64M
    ports:
      - "${DB_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - db_data:/var/lib/mysql
      - db_logs:/var/log/mysql
      # Optional: Custom MySQL configuration
      # - ./docker/mysql.cnf:/etc/mysql/conf.d/custom.cnf:ro
    networks:
      - daysave-network
    restart: unless-stopped
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --innodb-buffer-pool-size=128M
      - --innodb-log-file-size=64M

  # Optional: Redis for caching (future enhancement)
  # redis:
  #   container_name: daysave-redis
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - daysave-network
  #   restart: unless-stopped

volumes:
  # Database data
  db_data:
    driver: local
  db_logs:
    driver: local
  
  # Application data
  app_logs:
    driver: local
  app_uploads:
    driver: local
  app_temp:
    driver: local
  app_backup:
    driver: local
  multimedia_temp:
    driver: local
  
  # Optional: Redis data for future caching
  # redis_data:
  #   driver: local 