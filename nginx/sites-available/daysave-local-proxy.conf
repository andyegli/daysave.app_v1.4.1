# DaySave Local Development with Remote Proxy Configuration
# This configuration allows testing the Docker app through a remote proxy
# Use this when you want to test locally but access through a remote proxy/tunnel

# HTTP Server for Local Testing
server {
    listen 80;
    listen [::]:80;
    server_name localhost 127.0.0.1;
    
    # Allow large file uploads for testing
    client_max_body_size 50m;
    client_body_timeout 300s;
    
    # Security headers for local testing
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # Logging for development
    access_log /var/log/nginx/daysave_local_access.log;
    error_log /var/log/nginx/daysave_local_error.log debug;
    
    # Main Application Proxy to Docker Container
    location / {
        # Point to the Docker container (use host.docker.internal for Docker Desktop)
        # or the actual container name if running in the same Docker network
        proxy_pass http://daysave-app:3000;
        
        # Preserve headers for proper localhost handling
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Enable WebSocket support for development features
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # Development-friendly timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable buffering for real-time logs
        proxy_buffering off;
    }
    
    # API Routes
    location /api/ {
        proxy_pass http://daysave-app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeout for multimedia processing
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # File Upload Endpoint
    location /upload {
        proxy_pass http://daysave-app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for large files
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Allow streaming uploads
        proxy_request_buffering off;
    }
    
    # Health Check Endpoint
    location /health {
        proxy_pass http://daysave-app:3000;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Static files - serve from container
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://daysave-app:3000;
        proxy_set_header Host $host;
        
        # Cache static files for better performance
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Development error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Alternative server block for remote proxy access
# If accessing through a remote proxy service (like ngrok, cloudflare tunnel, etc.)
server {
    listen 8080;
    listen [::]:8080;
    server_name _;
    
    # Headers for remote proxy compatibility
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Allow large uploads
    client_max_body_size 50m;
    
    location / {
        proxy_pass http://daysave-app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # Important: preserve the original host header for OAuth callbacks
        proxy_set_header Host $http_host;
        proxy_set_header X-Original-Host $http_host;
    }
}